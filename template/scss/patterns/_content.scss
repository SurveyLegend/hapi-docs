.content
{
    position: absolute;
    z-index: z-index(above);
    top: 0;
    right: 0;
    bottom: 0;
    left: $sidebar-width;

    overflow-x: hidden;
    overflow-y: scroll;

    @include respond-to(medium-screens)
    {
        left: $sidebar-width-medium + 1;
    }
    @include respond-to(small-screens)
    {
        left: 0;
    }
}




.method
{
    position: relative;
    z-index: z-index(default) + 1;

    overflow: hidden;

    // &:first-child
    // {
    //     margin-top: 1px;
    // }

    &:last-child
    {
        min-height: 100vh;
    }
    &.first-of-group
    {
        padding-top: $x5;
        &:first-child
        {
            @include respond-to(small-screens)
            {
                padding-top: $x20;
            }
            @include respond-to(mobile-screens)
            {
                padding-top: $x10;
            }
        }
        &:not(:first-child)
        {
            border-top: 1px dashed rgba($black, .1);
            background: linear-gradient(to bottom, rgba($black, .02), transparent 90%);
        }
    }
}

.method__area
{
    overflow: hidden;
}

.method__copy
{
    float: left;

    width: $method__copy-width;
    padding: 0 0 $x12;

    @include respond-to(mobile-screens)
    {
        float: none;

        width: 100%;
        padding-top: $x10;
    }


    code
    {
        font-size: 13px;
        line-height: $x5;

        display: inline-block;

        padding: 0 $x1;

        color: $purple;
        border: 1px solid color($grey, lightest);
        border-radius: $x1;
        background: color($grey, lightester);

        @include font-code;
    }
}

.method__copy__padding
{
    padding: $x5 $x10;

    &:last-child
    {
        padding-bottom: 0;
    }
}

.method__list
{
    padding: $x10 $x10 0;

    .method__copy__padding + &
    {
        padding-bottom: $x10;
    }
}

.method__list__group
{
    margin-top: $x2;

    border-top: 1px solid color($grey, light);
}

.method__list__item
{
    line-height: $x6;

    padding: $x4 0;

    border-bottom: 1px solid color($grey, lightest);

    @include respond-to(wide-screens)
    {
        &:after,
        &:before
        {
            display: table;

            content: '';
        }

        &:after
        {
            clear: both;
        }
    }

    &:last-child
    {
        border-bottom: 1px solid color($grey, light);
    }
}

.method__list__item__label
{
    font-size: 14px;
    line-height: $x5;

    white-space: normal;
    word-break: break-all;

    @include respond-to(wide-screens)
    {
        position: relative;
        z-index: z-index(default) + 4;

        float: left;

        width: $method__list__item__label-space - $x4;

        text-align: right;
    }

    .method__list:not(.is-empty)
    {
        &:after
        {
            font-weight: 400;

            position: absolute;
            top: 0;
            left: 200px;

            content: '\2014';
            text-align: left;

            color: color($grey, lightest);
        }
    }

    &:hover
    {
        .header-anchor
        {
            opacity: 1;
        }
    }

    .method__list.is-empty &
    {
        font-weight: 400;

        text-align: center;

        color: color($grey, default);

        @include respond-to(wide-screens)
        {
            width: 100%;
        }
    }

    .header-anchor
    {
        position: relative;
        top: $x1;
        left: -$x5;

        display: inline-block;

        width: $x5;
        height: $x5;
        margin-right: -$x4;

        transition: opacity .2s ease, border .2s ease;

        opacity: 0;
        border: 1px solid transparent;
        border-radius: $x1;
        background-position: 50% 50%;
        background-size: $x3 $x3;

        @include icon('../svg/anchor.svg');
        isolation: isolate;

        &:hover
        {
            border: 1px solid color($grey, lighter);
        }
    }
}

.method__list__item__label__details
{
    font-size: 13px;
    font-weight: 400;

    display: inline-block;

    margin-left: $x1;
    padding: 0 $x1;

    word-break: normal;

    color: color($grey, default);

    @include respond-to(wide-screens)
    {
        display: block;

        padding: 0;
    }
}

.method__list__item__label__badge
{
    font-weight: 600;
    line-height: $x5;

    text-transform: uppercase;

    color: $amber;

    @extend .method__list__item__label__details;
}


.method__list__item__description
{
    line-height: $x5;

    margin: $x2 0 0 $x1;

    background: $white;

    @include respond-to(wide-screens)
    {
        position: relative;
        z-index: z-index(above);

        margin: 0 0 0 $method__list__item__label-space;
    }

    p
    {
        margin-top: $x1;
    }
}

.method__example
{
    position: relative;
    z-index: z-index(default) + 1;

    margin-left: $method__copy-width;
    padding: $x10 0 $x12;

    @include respond-to(mobile-screens)
    {
        width: 100%;
        margin: 0;

        background: $background__actual-background-color;
    }

    .method__area
    {
        &:first-child
        {
            padding-top: $x18;
        }
    }

    code,
    pre
    {
        text-align: left;
        white-space: pre-wrap;
        word-spacing: normal;
        word-break: break-word;
        tab-size: 4;
        hyphens: none;

        color: color($grey, light);

        direction: ltr;
    }

    pre
    {
        font-size: 13px;
        font-weight: 500;
        line-height: $x5;

        padding: $x5 $x10;

        border-radius: $x3 / 2;
        background: color($grey, darkest);

        @include font-code;
        @include respond-to(medium-screens)
        {
            padding: $x5 $x6;
        }
    }
}

.method__example__part
{
    padding: $x7 $x10;
}

.method__example__declaration,
.method__example__response
{
    padding: $x5 0;

    &:first-child
    {
        padding-top: 0;
    }

    &:before
    {
        display: inline-block;

        margin-right: $x1;
        padding-bottom: $x2;

        color: color($grey, lightest);

        @include font;
    }
}

.method__example__declaration
{
    &:before
    {
        content: 'Definition';
    }
}


.method__example__response
{
    &:before
    {
        content: 'Example Response';
    }
}
